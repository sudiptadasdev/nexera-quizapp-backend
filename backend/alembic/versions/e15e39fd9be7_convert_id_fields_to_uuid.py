"""Convert ID fields to UUID

Revision ID: e15e39fd9be7
Revises: 3f44515e8cd8
Create Date: 2025-04-12 15:02:44.365205

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e15e39fd9be7'
down_revision: Union[str, None] = '3f44515e8cd8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # 1. Drop foreign keys that reference columns you're changing
    op.drop_constraint('questions_quiz_id_fkey', 'questions', type_='foreignkey')
    op.drop_constraint('user_answers_question_id_fkey', 'user_answers', type_='foreignkey')
    op.drop_constraint('user_answers_user_id_fkey', 'user_answers', type_='foreignkey')
    op.drop_constraint('user_answers_attempt_id_fkey', 'user_answers', type_='foreignkey')
    op.drop_constraint('quiz_attempts_quiz_id_fkey', 'quiz_attempts', type_='foreignkey')
    op.drop_constraint('quiz_attempts_user_id_fkey', 'quiz_attempts', type_='foreignkey')
    op.drop_constraint('quizzes_file_id_fkey', 'quizzes', type_='foreignkey')
    op.drop_constraint('uploaded_files_user_id_fkey', 'uploaded_files', type_='foreignkey')

    # 2. Alter columns to UUID with cast
    op.alter_column('questions', 'id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=False, postgresql_using='id::uuid')
    op.alter_column('quiz_attempts', 'id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=False, postgresql_using='id::uuid')
    op.alter_column('quiz_attempts', 'user_id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=True, postgresql_using='user_id::uuid')
    op.alter_column('quiz_attempts', 'quiz_id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=True, postgresql_using='quiz_id::uuid')
    op.alter_column('quizzes', 'id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=False, postgresql_using='id::uuid')
    op.alter_column('quizzes', 'file_id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=True, postgresql_using='file_id::uuid')
    op.alter_column('uploaded_files', 'id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=False, postgresql_using='id::uuid')
    op.alter_column('uploaded_files', 'user_id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=True, postgresql_using='user_id::uuid')
    op.alter_column('user_answers', 'id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=False, postgresql_using='id::uuid')
    op.alter_column('user_answers', 'user_id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=True, postgresql_using='user_id::uuid')
    op.alter_column('user_answers', 'question_id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=True, postgresql_using='question_id::uuid')
    op.alter_column('user_answers', 'attempt_id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=True, postgresql_using='attempt_id::uuid')
    op.alter_column('users', 'id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=False, postgresql_using='id::uuid')
    op.alter_column('quizzes', 'id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=False, postgresql_using='id::uuid')
    op.alter_column('questions', 'quiz_id', existing_type=sa.VARCHAR(), type_=sa.UUID(), existing_nullable=True, postgresql_using='quiz_id::uuid')


    # 3. Recreate foreign keys with correct UUID types
    op.create_foreign_key('user_answers_question_id_fkey', 'user_answers', 'questions', ['question_id'], ['id'])
    op.create_foreign_key('user_answers_user_id_fkey', 'user_answers', 'users', ['user_id'], ['id'])
    op.create_foreign_key('user_answers_attempt_id_fkey', 'user_answers', 'quiz_attempts', ['attempt_id'], ['id'])
    op.create_foreign_key('quiz_attempts_quiz_id_fkey', 'quiz_attempts', 'quizzes', ['quiz_id'], ['id'])
    op.create_foreign_key('quiz_attempts_user_id_fkey', 'quiz_attempts', 'users', ['user_id'], ['id'])
    op.create_foreign_key('quizzes_file_id_fkey', 'quizzes', 'uploaded_files', ['file_id'], ['id'])
    op.create_foreign_key('uploaded_files_user_id_fkey', 'uploaded_files', 'users', ['user_id'], ['id'])
    op.create_foreign_key('questions_quiz_id_fkey', 'questions', 'quizzes', ['quiz_id'], ['id'])

    op.alter_column('users', 'is_active', existing_type=sa.BOOLEAN(), nullable=True)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('user_answers', 'attempt_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('user_answers', 'question_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('user_answers', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('user_answers', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('uploaded_files', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('uploaded_files', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('quizzes', 'file_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('quizzes', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('quiz_attempts', 'quiz_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('quiz_attempts', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('quiz_attempts', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('questions', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    # ### end Alembic commands ###
